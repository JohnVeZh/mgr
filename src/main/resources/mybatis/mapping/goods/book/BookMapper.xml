<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sparke.modules.goods.book.mapper.BookMapper">
    <insert id="insert">
        INSERT INTO tb_product_book
        (
            id,
            product_id,
            presss,
            type_id
        )
        VALUES
        (
               #{id},
               #{productId},
               #{presss},
               #{typeId}
        )
    </insert>
    <update id="update">
        update tb_product_book
        set
                id = #{bookId}
                <if test="productId!=null">
                   ,product_id = #{productId}
                </if>
                <if test="presss!=null">
                   ,presss = #{presss}
                </if>
                <if test="typeId!=null">
                   ,type_id = #{typeId}
                </if>
        where id = #{bookId}
    </update>

    <select id="findList" resultType="cn.sparke.modules.goods.book.entity.BookEntity">
        select
              tb_product_book.id,
              tb_product_book.product_id,
              tb_product_book.presss,
              tb_product_book.type_id
         from tb_product_book
        where 1=1
            <if test="id!=null and id!=''">
              and  tb_product_book.id = #{id}
            </if>
            <if test="productId!=null and productId!=''">
              and  tb_product_book.product_id = #{productId}
            </if>
            <if test="presss!=null and presss!=''">
              and  tb_product_book.presss = #{presss}
            </if>
            <if test="typeId!=null and typeId!=''">
              and  tb_product_book.type_id = #{typeId}
            </if>
    </select>
    
    <select id="queryAllList" resultType="cn.sparke.modules.goods.book.entity.BookEntity">
        SELECT
            tp.id,
            tp.name,
            tp.list_img,
            tp.cover_img,
            tp.original_price,
            tp.present_price,
            tp.postage,
            tp.is_show,
            tpbt.`name` book_type_name,
            tp.create_date,
            tpb.product_id,
            tp.create_by
        FROM
            tb_product tp,
            tb_product_book tpb,
            tb_product_book_type tpbt
        WHERE

            tp.type = 2
            AND
            tp.id=tpb.product_id
            AND
            tpb.type_id=tpbt.id
        <if test="condition!=null and condition!=''">
            AND  tp.name like CONCAT('%',#{condition},'%')
        </if>
        <if test="startDate!=null and startDate!=''">
            AND tpbt.create_date &gt;= #{startDate}
        </if>
        <if test="endDate!=null and endDate!=''">
             AND tpbt.create_date &lt;= #{endDate}
        </if>
        <if test="productId!=null and productId!=''">
            AND tpb.product_id = #{productId}
        </if>
        <if test="sectionCode!=null">
            AND tp.section_code = #{sectionCode}
        </if>
        <if test="typeId!=null and typeId!=''">
            AND tpb.type_id = #{typeId}
        </if>
        AND tp.del_flag=0
        ORDER BY tp.sort ASC ,tp.create_date DESC

    </select>


    <select id="getById" resultType="cn.sparke.modules.goods.book.entity.BookEntity">
        SELECT
            tp.*,
            tpb.id book_id,
            tpb.presss,
            tpb.type_id,
            (
                SELECT
                    NAME
                FROM
                    tb_product_book_type
                WHERE
                    id = (
                        SELECT
                            type_id
                        FROM
                            tb_product_book
                        WHERE
                            product_id = #{id}
                    )
            )  book_type_name
        FROM
            tb_product tp,
            tb_product_book tpb,
            tb_product_book_type tpbt
        WHERE
            tp.type = 2
            AND tp.id = tpb.product_id
            AND tpb.type_id = tpbt.id
            AND tp.id = #{id}
    </select>

    <select id="get" resultType="cn.sparke.modules.goods.book.entity.BookEntity">
        select
              tb_product_book.id,
              tb_product_book.product_id,
              tb_product_book.presss,
              tb_product_book.type_id
        from tb_product_book
        where 1=1
            <if test="id!=null and id!=''">
                and  tb_product_book.id = #{id}
            </if>
            <if test="productId!=null and productId!=''">
                and  tb_product_book.product_id = #{productId}
            </if>
            <if test="presss!=null and presss!=''">
                and  tb_product_book.presss = #{presss}
            </if>
            <if test="typeId!=null and typeId!=''">
                and  tb_product_book.type_id = #{typeId}
            </if>
         limit 1
     </select>

      <update id="deleteById">
            update tb_product_book
            set del_flag = 1
            where product_id = #{id}
      </update>

</mapper>