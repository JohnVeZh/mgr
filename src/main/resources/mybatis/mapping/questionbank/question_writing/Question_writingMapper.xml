<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sparke.modules.questionbank.question_writing.mapper.Question_writingMapper">
    <resultMap id="WritingMap" type="cn.sparke.modules.questionbank.question_writing.entity.QuestionWritingEntity" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="question_id" property="questionId" jdbcType="VARCHAR" />
        <result column="reference" property="reference" jdbcType="VARCHAR" />
        <result column="analysis_cc_id" property="analysisCcId" jdbcType="VARCHAR" />
        <association property="questionEntity" resultMap="cn.sparke.modules.questionbank.question.mapper.QuestionMapper.QuestionMap"/>
    </resultMap>

    <insert id="insert">
        INSERT INTO tb_question_writing
        (
            id,
            question_id,
            reference,
            analysis_cc_id
        )
        VALUES
        (
               #{id},
               #{questionId},
               #{reference},
               #{analysisCcId}
        )
    </insert>
    <insert id="insertList" parameterType="java.util.List">

        INSERT INTO tb_question_writing
        (
            id,
            question_id,
            reference,
            analysis_cc_id
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id},
            #{item.questionId},
            #{item.reference},
            #{item.analysisCcId}
            )

        </foreach>


    </insert>
    <update id="update">
        update tb_question_writing
        set
                id = #{id}
                <if test="questionId!=null">
                   ,question_id = #{questionId}
                </if>
                <if test="reference!=null">
                   ,reference = #{reference}
                </if>
                <if test="analysisCcId!=null">
                   ,analysis_cc_id = #{analysisCcId}
                </if>
        where id = #{id}
    </update>

    <select id="queryList" resultMap="WritingMap">
        SELECT
        q.id q_id,
        q.name,
        q.content,
        q.type,
        q.has_item,
        q.question_num,
        q.section_code,
        q.analysis,
        q.create_date,
        q.create_by,
        q.update_date,
        q.update_by,
        q.remarks,
        q.del_flag,
        qw.id,
        qw.question_id,
        qw.reference,
        qw.analysis_cc_id
        from tb_question q,tb_question_writing qw,tb_paper_question pq
        where q.id = qw.question_id and pq.question_id = q.id and q.del_flag = 0
        <if test="structureId!=null and structureId!=''">
            and  pq.structure_id = #{structureId}
        </if>
        <if test="condition!=null and condition!=''">
            and  q.name like CONCAT('%',#{condition},'%')
        </if>
    </select>

    <select id="findList" resultType="cn.sparke.modules.questionbank.question_writing.entity.Question_writingEntity">

        SELECT * FROM (
        select
        tb_question_writing.id,
        tb_question_writing.question_id,
        tb_question_writing.reference,
        tb_question_writing.analysis_cc_id,
        d.name,
        d.type,
        d.has_item as hasItem
        from tb_question_writing ,tb_paper_structure a,tb_paper_question b ,tb_question d
        where 1=1
        and tb_question_writing.question_id=b.question_id
        and b.question_id = d.id
        and b.structure_id= a.id
        and a.parent_ids like CONCAT(CONCAT('%', #{id}), '%')
        and d.del_flag=0
        UNION
        select
        tb_question_writing.id,
        tb_question_writing.question_id,
        tb_question_writing.reference,
        tb_question_writing.analysis_cc_id,
        d.name,
        d.type,
        d.has_item as hasItem
        from tb_question_writing ,tb_paper_question b ,tb_question d
        where 1=1
        and tb_question_writing.question_id=b.question_id
        AND b.question_id = d.id
        AND b.structure_id=#{id}
        <if test="questionId!=null and questionId!=''">and tb_question_writing.question_id = #{questionId}
        </if>
            <if test="
        reference!=null and reference!=''">and tb_question_writing.reference = #{reference}
            </if>
            <if test="
        analysisCcId!=null and analysisCcId!=''">and tb_question_writing.analysis_cc_id = #{analysisCcId}
            </if>
        and d.del_flag=0
        ) m1
    </select>


    <select id="getById" resultType="cn.sparke.modules.questionbank.question_writing.entity.Question_writingEntity">
        select
              a.id,
              a.question_id,
              a.reference,
              a.analysis_cc_id,
              b.name,
              b.content,
              b.type,
              b.has_item,
              b.question_num,
              b.section_code,
              b.analysis,
              b.remarks
        from tb_question_writing a ,tb_question b
        where  a.question_id=b.id
        and a.id = #{id}
    </select>

    <select id="get" resultType="cn.sparke.modules.questionbank.question_writing.entity.Question_writingEntity">
        select
              tb_question_writing.id,
              tb_question_writing.question_id,
              tb_question_writing.reference,
              tb_question_writing.analysis_cc_id
        from tb_question_writing
        where 1=1
            <if test="id!=null and id!=''">
                and  tb_question_writing.id = #{id}
            </if>
            <if test="questionId!=null and questionId!=''">
                and  tb_question_writing.question_id = #{questionId}
            </if>
            <if test="reference!=null and reference!=''">
                and  tb_question_writing.reference = #{reference}
            </if>
            <if test="analysisCcId!=null and analysisCcId!=''">
                and  tb_question_writing.analysis_cc_id = #{analysisCcId}
            </if>
         limit 1
     </select>

      <update id="deleteById">
            update tb_question_writing
            set del_flag = 1
            where id = #{id}
      </update>
</mapper>